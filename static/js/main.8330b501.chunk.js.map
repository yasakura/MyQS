{"version":3,"sources":["utils/error.js","libs/firebase.js","services/auth.js","components/Login.js","components/SnackbarStack.js","services/diets.js","utils/uniqueKey.js","components/RadioButtons.js","components/DietForm.js","components/Pie.js","components/MyQS.js","components/Loading.js","hoc/GlobalLoader.js","App.js","reportWebVitals.js","index.js"],"names":["handleError","error","alert","console","code","message","app","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","getDatabase","auth","getAuth","logOut","signOut","signIn","a","isSignInWithEmailLink","window","location","href","email","localStorage","getItem","prompt","signInWithEmailLink","then","removeItem","search","catch","useRetrieveUser","useAuthState","user","loadingUser","Login","useState","isButtonDisabled","setIsButtonDisabled","login","actionCodeSettings","url","handleCodeInApp","Promise","resolve","sendSignInLinkToEmail","sendSignIn","setItem","style","height","display","alignItems","justifyContent","onSubmit","event","preventDefault","target","elements","value","type","name","id","required","marginLeft","Button","variant","disabled","SnackbarStack","snackPack","setSnackPack","isSnackbarShowed","setSnackbarShowed","React","undefined","messageInfo","setMessageInfo","useEffect","length","prev","slice","Snackbar","TransitionProps","onExited","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","reason","open","Alert","severity","key","useRetrieveDiets","userId","uid","useObjectVal","ref","diets","loadingDiets","uniqueKey","Math","random","toString","RadioButtons","data","sx","marginBottom","RadioGroup","row","defaultValue","width","map","meal","FormControlLabel","control","Radio","size","label","labelPlacement","DietForm","retrieveUser","retrieveDiets","handleSuccessMessage","labelStyle","border","borderRadius","padding","margin","mealLabelStyle","date","diet","set","sendDiets","rawDiets","dietEntry","dietFilter","item","currentDietInSavedDiet","filter","currentDietFirstIndexInSavedDiet","findIndex","splice","composeUserDiet","FormControl","component","textAlign","TextField","borderColor","color","InputLabelProps","shrink","mealsData","dietsData","Pie","fontSize","MyQS","getNearestDate","today","Date","dates","reduce","previousValue","currentValue","push","sort","b","abs","nearestDate","toLocaleDateString","savedDiet","veganDiet","vegetarianDiet","omnivoreDiet","title","getData","dataEntry","round","percentage","dietDates","index","indexOf","getDietNumber","onClick","Loading","className","maxWidth","Box","GlobalLoader","children","isLoading","setLoading","shouldShowLoader","setTimeout","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8330b501.chunk.js","sourcesContent":["const handleError = (error) => {\n  alert(\"Une erreur est survenue, recommence 😜\");\n  console.error(\"errorCode\", error?.code);\n  console.error(\"errorMessage\", error?.message);\n};\n\nexport default handleError;\n","import { initializeApp } from \"firebase/app\";\nimport { getDatabase } from \"firebase/database\";\nimport { getAuth, signOut } from \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nconst app = initializeApp(firebaseConfig);\n\nexport const database = getDatabase(app);\n\nexport const auth = getAuth();\n\nexport const logout = () => {\n  signOut(auth);\n};\n","import {\n  isSignInWithEmailLink,\n  sendSignInLinkToEmail,\n  signInWithEmailLink,\n} from \"firebase/auth\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { auth, logout } from \"../libs/firebase\";\nimport handleError from \"../utils/error\";\n\nconst logOut = () => logout();\n\nconst sendSignIn = (email) => {\n  const actionCodeSettings = {\n    url: window.location.href,\n    handleCodeInApp: true,\n  };\n  return Promise.resolve(\n    sendSignInLinkToEmail(auth, email, actionCodeSettings)\n  );\n};\n\nconst signIn = async () => {\n  if (isSignInWithEmailLink(auth, window.location.href)) {\n    let email = window.localStorage.getItem(\"emailForSignIn\");\n    if (!email) {\n      email = window.prompt(\"Entrez votre email pour confirmation\");\n    }\n\n    await signInWithEmailLink(auth, email, window.location.href)\n      .then(() => {\n        window.localStorage.removeItem(\"emailForSignIn\");\n        window.location.search = \"\";\n      })\n      .catch((error) => {\n        if (error?.code === \"auth/invalid-action-code\") return;\n        handleError(error);\n      });\n  }\n};\n\nconst useRetrieveUser = () => {\n  const [user, loadingUser] = useAuthState(auth);\n  return {user, loadingUser};\n};\n\nexport { sendSignIn, logOut, signIn, useRetrieveUser as retrieveUser };\n","import React, { useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport handleError from \"../utils/error\";\nimport { sendSignIn } from \"../services/auth\";\n\nconst Login = () => {\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\n\n  const login = (email) => {\n    setIsButtonDisabled(true);\n\n    sendSignIn(email)\n      .then(() => {\n        window.localStorage.setItem(\"emailForSignIn\", email);\n        alert(\"Tu vas recevoir un mail pour te connecter 💌\");\n        setIsButtonDisabled(false);\n      })\n      .catch(handleError);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const email = event?.target?.elements?.email?.value;\n    login(email);\n  };\n\n  return (\n    <div\n      style={{\n        height: \"calc(100vh - 200px)\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      }}\n    >\n      <form onSubmit={handleSubmit}>\n        <label>\n          Renseigne ton email\n          <input\n            type=\"email\"\n            name=\"email\"\n            id=\"email\"\n            required\n            style={{ marginLeft: \"10px\" }}\n          />\n        </label>\n        <br />\n        <br />\n        <Button type=\"submit\" variant=\"contained\" disabled={isButtonDisabled}>\n          {!isButtonDisabled\n            ? \"Recevoir le lien de connexion\"\n            : \"Patiente un peu 🚀\"}\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Alert from \"@mui/material/Alert\";\nimport Snackbar from \"@mui/material/Snackbar\";\n\nconst SUCCESS_MESSAGE_LENGTH_DURATION = 3000;\n\nconst SnackbarStack = ({ snackPack, setSnackPack }) => {\n  const [isSnackbarShowed, setSnackbarShowed] = useState(false);\n  const [messageInfo, setMessageInfo] = React.useState(undefined);\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setSnackbarShowed(false);\n  };\n\n  const handleExited = () => {\n    setMessageInfo(undefined);\n  };\n\n  React.useEffect(() => {\n    if (snackPack.length && !messageInfo) {\n      setMessageInfo({ ...snackPack[0] });\n      setSnackPack((prev) => prev.slice(1));\n      setSnackbarShowed(true);\n    } else if (snackPack.length && messageInfo && isSnackbarShowed) {\n      setSnackbarShowed(false);\n    }\n  }, [snackPack, setSnackPack, messageInfo, isSnackbarShowed]);\n\n  return (\n    <Snackbar\n      TransitionProps={{ onExited: handleExited }}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      autoHideDuration={SUCCESS_MESSAGE_LENGTH_DURATION}\n      key={messageInfo?.key ?? undefined}\n      onClose={handleClose}\n      open={isSnackbarShowed}\n    >\n      <Alert severity=\"success\">Repas enregistré</Alert>\n    </Snackbar>\n  );\n};\n\nSnackbarStack.propTypes = {\n  snackPack: PropTypes.arrayOf(\n    PropTypes.shape({\n      message: PropTypes.number,\n      key: PropTypes.string,\n    })\n  ).isRequired,\n  setSnackPack: PropTypes.func.isRequired,\n};\n\nexport default SnackbarStack;\n","import { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useObjectVal } from \"react-firebase-hooks/database\";\nimport { ref, set } from \"firebase/database\";\nimport { auth, database } from \"../libs/firebase\";\n\nconst useRetrieveDiets = () => {\n  const [user] = useAuthState(auth);\n  const userId = user?.uid;\n  const [diets, loadingDiets] = useObjectVal(ref(database, `users/${userId}`));\n\n  return { diets: diets || [], loadingDiets };\n};\n\nconst useSendDiets = (user, data) =>\n  set(ref(database, `users/${user?.uid}`), data);\n\nexport { useRetrieveDiets as retrieveDiets, useSendDiets as sendDiets };\n","const uniqueKey = () => Math.random().toString().slice(2, 9);\n\nexport default uniqueKey;","import { FormControlLabel, Radio, RadioGroup } from \"@mui/material\";\nimport React from \"react\";\nimport * as PropTypes from \"prop-types\";\nimport uniqueKey from \"../utils/uniqueKey\";\n\nconst RadioButtons = ({ data, sx }) => (\n  <div\n    style={{\n      marginBottom: \"40px\",\n    }}\n  >\n    <RadioGroup\n      row\n      aria-label=\"position\"\n      name={data?.[0]?.name}\n      defaultValue={data?.[0]?.value}\n      sx={{\n        justifyContent: \"space-between\",\n        width: \"100%\",\n      }}\n    >\n      {data.map((meal) => (\n        <FormControlLabel\n          value={meal?.value}\n          key={uniqueKey()}\n          control={<Radio size=\"small\" />}\n          label={meal?.label}\n          labelPlacement=\"top\"\n          sx={sx}\n        />\n      ))}\n    </RadioGroup>\n  </div>\n);\n\nRadioButtons.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string,\n      name: PropTypes.string,\n      value: PropTypes.string,\n    })\n  ).isRequired,\n  sx: PropTypes.shape({\n    border: PropTypes.string,\n    borderRadius: PropTypes.string,\n    height: PropTypes.string,\n    margin: PropTypes.number,\n    padding: PropTypes.string,\n    width: PropTypes.string,\n  }).isRequired,\n};\n\nexport default RadioButtons;\n","import React, { useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport { FormControl, TextField } from \"@mui/material\";\nimport SnackbarStack from \"./SnackbarStack\";\nimport { retrieveDiets, sendDiets } from \"../services/diets\";\nimport { retrieveUser } from \"../services/auth\";\nimport uniqueKey from \"../utils/uniqueKey\";\nimport RadioButtons from \"./RadioButtons\";\nimport mealsData from \"../data/meals.json\";\nimport dietsData from \"../data/diets.json\";\n\nconst DietForm = () => {\n  const [snackPack, setSnackPack] = useState([]);\n  const { user } = retrieveUser();\n  const { diets } = retrieveDiets();\n\n  const composeUserDiet = (date, diet, meal) => {\n    const rawDiets = diets;\n    const dietEntry = { date, diet, meal };\n    const dietFilter = (item) =>\n      dietEntry.date === item.date && dietEntry.meal === item.meal;\n    const currentDietInSavedDiet = rawDiets.filter(dietFilter);\n    const currentDietFirstIndexInSavedDiet = rawDiets.findIndex(dietFilter);\n    const isCurrentDietInSavedDiet = currentDietInSavedDiet.length > 0;\n    if (isCurrentDietInSavedDiet) {\n      rawDiets.splice(\n        currentDietFirstIndexInSavedDiet,\n        currentDietInSavedDiet.length\n      );\n    }\n\n    return [...rawDiets, dietEntry];\n  };\n\n  const handleSuccessMessage = () => {\n    setSnackPack((prev) => [...prev, { key: uniqueKey() }]);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const date = event.target.date.value;\n    const diet = event.target.diet.value;\n    const meal = event.target.meal.value;\n\n    sendDiets(user, composeUserDiet(date, diet, meal)).then(\n      handleSuccessMessage\n    );\n  };\n\n  const labelStyle = {\n    border: \"solid 1px black\",\n    height: \"100px\",\n    borderRadius: \"5px\",\n    justifyContent: \"center\",\n    padding: \"5px\",\n    width: \"100px\",\n    margin: 0,\n  };\n\n  const mealLabelStyle = {\n    ...labelStyle,\n    width: \"65px\",\n    height: \"65px\",\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <FormControl component=\"fieldset\" sx={{ width: \"100%\" }}>\n          <div style={{ textAlign: \"center\", marginBottom: \"40px\" }}>\n            <TextField\n              id=\"date\"\n              label=\"Date du repas\"\n              type=\"date\"\n              sx={{\n                width: 220,\n                \"& .MuiOutlinedInput-notchedOutline\": { borderColor: \"black\" },\n                \"& .MuiInputLabel-root\": { color: \"black\" },\n              }}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </div>\n\n          <RadioButtons sx={mealLabelStyle} data={mealsData} />\n          <RadioButtons sx={labelStyle} data={dietsData} />\n        </FormControl>\n\n        <Button type=\"submit\" variant=\"contained\">\n          Enregistrer\n        </Button>\n      </form>\n\n      <SnackbarStack snackPack={snackPack} setSnackPack={setSnackPack} />\n    </>\n  );\n};\n\nexport default DietForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { PieChart } from \"react-minimal-pie-chart\";\n\nconst Pie = ({ diets, data, label }) => (\n  <div style={{ width: \"70%\", height: \"300px\", margin: \"0 auto 30px\" }}>\n    {diets.length === 0 ? (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"100%\",\n        }}\n      >\n        <p>Remplis le formulaire 😉</p>\n      </div>\n    ) : (\n      <PieChart data={data} label={label} labelStyle={{ fontSize: \"6px\" }} />\n    )}\n  </div>\n);\n\nPie.propTypes = {\n  diets: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      value: PropTypes.number,\n      color: PropTypes.string,\n    })\n  ).isRequired,\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      date: PropTypes.string,\n      diet: PropTypes.string,\n      meal: PropTypes.string,\n    })\n  ).isRequired,\n  label: PropTypes.func.isRequired,\n};\n\nexport default Pie;\n","import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport DietForm from \"./DietForm\";\nimport Pie from \"./Pie\";\nimport { logOut, retrieveUser } from \"../services/auth\";\nimport { retrieveDiets } from \"../services/diets\";\n\nconst MyQS = () => {\n  const { user } = retrieveUser();\n  const { diets } = retrieveDiets();\n\n  const getDietNumber = () => {\n    const dietDates = diets.reduce((previousValue, currentValue) => {\n      previousValue.push(currentValue.date);\n      return previousValue;\n    }, []);\n\n    const dietDatesWithoutDuplicateDates = dietDates.filter(\n      (item, index) => dietDates.indexOf(item) === index\n    );\n\n    return dietDatesWithoutDuplicateDates.length;\n  };\n\n  const getData = () => {\n    const savedDiet = diets;\n    const veganDiet = savedDiet.filter((diet) => diet.diet === \"vegan\");\n    const vegetarianDiet = savedDiet.filter(\n      (diet) => diet.diet === \"vegetarian\"\n    );\n    const omnivoreDiet = savedDiet.filter((diet) => diet.diet === \"omnivore\");\n\n    return [\n      { title: \"vegan\", value: veganDiet.length, color: \"#75DBCD\" },\n      { title: \"végétarien\", value: vegetarianDiet.length, color: \"#FAA381\" },\n      { title: \"omnivore\", value: omnivoreDiet.length, color: \"#DCDBA8\" },\n    ];\n  };\n\n  const getDatesFromSavedDiet = () =>\n    diets.reduce((previousValue, currentValue) => {\n      previousValue.push(currentValue.date);\n      return previousValue;\n    }, []);\n\n  const getNearestDate = () => {\n    const today = new Date();\n    const dates = getDatesFromSavedDiet();\n    const sortedByDiff = [...dates].sort(\n      (a, b) => Math.abs(new Date(a) - today) - Math.abs(new Date(b) - today)\n    );\n\n    return sortedByDiff[0];\n  };\n\n  const nearestDate = getNearestDate()\n    ? new Date(getNearestDate()).toLocaleDateString(\"fr\")\n    : \"Aucune 🤷‍\";\n\n  return (\n    <>\n      <Pie\n        diets={diets}\n        data={getData()}\n        label={({ dataEntry }) =>\n          dataEntry.value > 0\n            ? `${dataEntry.title} : ${Math.round(dataEntry.percentage)}%`\n            : null\n        }\n      />\n\n      <DietForm />\n\n      <div>\n        <p>Nombre de jours : {getDietNumber()}</p>\n        <p>Date la plus proche renseignée : {nearestDate}</p>\n      </div>\n\n      <hr />\n      {user && (\n        <div>\n          <p>Utilisateur: {user.email}</p>\n          <Button onClick={logOut} type=\"submit\" variant=\"outlined\">\n            Se déconnecter\n          </Button>\n        </div>\n      )}\n\n      <hr />\n      <br />\n    </>\n  );\n};\n\nMyQS.propTypes = {};\n\nexport default MyQS;\n","import \"../css/loader.css\";\nimport React from \"react\";\nimport Box from \"@mui/material/Box\";\n\nconst Loading = () => (\n  <div\n    className=\"App\"\n    style={{ maxWidth: \"375px\", margin: \"0 auto\", padding: \"0 10px\" }}\n  >\n    <header style={{ margin: \"20px 0\" }}>\n      {process.env.REACT_APP_WEBSITE_NAME}\n    </header>\n    <div\n      style={{\n        height: \"calc(100vh - 200px)\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      }}\n    >\n      <div className=\"loading\">\n        <Box component=\"p\">Patiente pendant que la magie opère ✨</Box>\n        <span />\n        <span />\n        <span />\n        <span />\n        <span />\n        <span />\n        <span />\n      </div>\n    </div>\n  </div>\n);\n\nexport default Loading;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Loading from \"../components/Loading\";\nimport { retrieveDiets } from \"../services/diets\";\nimport { retrieveUser } from \"../services/auth\";\n\nconst GlobalLoader = ({ children }) => {\n  const [isLoading, setLoading] = useState(true);\n  const { loadingDiets } = retrieveDiets();\n  const { loadingUser } = retrieveUser();\n  const shouldShowLoader = loadingUser || loadingDiets;\n\n  useEffect(() => {\n    if (shouldShowLoader) {\n      setTimeout(() => setLoading(true), 500);\n    } else {\n      setTimeout(() => setLoading(false), 500);\n    }\n  }, [setLoading, shouldShowLoader]);\n\n  return isLoading ? <Loading /> : children;\n};\n\nGlobalLoader.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default GlobalLoader;\n","// import logo from './logo.svg';\nimport \"./css/App.css\";\nimport React, { useEffect } from \"react\";\nimport Login from \"./components/Login\";\nimport MyQS from \"./components/MyQS\";\nimport { signIn, retrieveUser } from \"./services/auth\";\nimport GlobalLoader from \"./hoc/GlobalLoader\";\n\nfunction App() {\n  const { user } = retrieveUser();\n\n  useEffect(() => signIn());\n\n  return (\n    <GlobalLoader>\n      <div\n        className=\"App\"\n        style={{ maxWidth: \"375px\", margin: \"0 auto\", padding: \"0 10px\" }}\n      >\n        <header style={{ margin: \"20px 0\" }}>\n          {process.env.REACT_APP_WEBSITE_NAME}\n        </header>\n        {user ? <MyQS /> : <Login />}\n      </div>\n    </GlobalLoader>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}