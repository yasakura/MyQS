{"version":3,"sources":["utils/error.js","libs/firebase.js","services/auth.js","components/EmailInput.js","components/Login.js","components/SnackbarStack.js","services/diets.js","utils/uniqueKey.js","components/RadioButtons.js","components/DietForm.js","components/Chart.js","components/MyQS.js","components/Header.js","components/Loading.js","hoc/GlobalLoader.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["handleError","error","alert","console","code","message","app","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","getDatabase","auth","getAuth","logOut","signOut","signIn","a","isSignInWithEmailLink","window","location","href","email","localStorage","getItem","prompt","signInWithEmailLink","then","removeItem","search","catch","useRetrieveUser","useAuthState","user","loadingUser","EmailInput","isEmailOnError","setEmailOnError","useState","helperText","setHelperText","setSuccessEmail","FormControl","TextField","id","type","label","className","placeholder","required","onBlur","event","target","value","isEmptyEmail","length","isValidEmail","test","onChange","Login","isButtonDisabled","setIsButtonDisabled","login","actionCodeSettings","url","handleCodeInApp","Promise","resolve","sendSignInLinkToEmail","sendSignIn","setItem","onSubmit","preventDefault","elements","Button","variant","disabled","SnackbarStack","snackPack","setSnackPack","isSnackbarShowed","setSnackbarShowed","React","undefined","messageInfo","setMessageInfo","useEffect","prev","slice","Snackbar","TransitionProps","onExited","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","reason","open","Alert","severity","key","useRetrieveDiets","userId","uid","useObjectVal","ref","diets","loadingDiets","uniqueKey","Math","random","toString","RadioButtons","data","cssClassName","RadioGroup","row","name","defaultValue","map","meal","FormControlLabel","control","Radio","size","labelPlacement","DietForm","retrieveUser","retrieveDiets","handleSuccessMessage","date","diet","set","sendDiets","rawDiets","dietEntry","dietFilter","item","currentDietInSavedDiet","filter","currentDietFirstIndexInSavedDiet","findIndex","splice","composeUserDiet","component","InputLabelProps","shrink","mealsData","dietsData","Chart","labelStyle","fontSize","MyQS","getNearestDate","today","Date","dates","reduce","previousValue","currentValue","push","sort","b","abs","nearestDate","toLocaleDateString","savedDiet","veganDiet","vegetarianDiet","omnivoreDiet","title","color","getData","dataEntry","round","percentage","dietDates","index","indexOf","getDietNumber","onClick","Header","Box","AppBar","position","Toolbar","Typography","Loading","GlobalLoader","children","isLoading","setLoading","shouldShowLoader","setTimeout","Footer","App","theme","createTheme","palette","primary","main","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e3af5ca.chunk.js","sourcesContent":["const handleError = (error) => {\n  alert(\"Une erreur est survenue, recommence 😜\");\n  console.error(\"errorCode\", error?.code);\n  console.error(\"errorMessage\", error?.message);\n};\n\nexport default handleError;\n","import { initializeApp } from \"firebase/app\";\nimport { getDatabase } from \"firebase/database\";\nimport { getAuth, signOut } from \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nconst app = initializeApp(firebaseConfig);\n\nexport const database = getDatabase(app);\n\nexport const auth = getAuth();\n\nexport const logout = () => {\n  signOut(auth);\n};\n","import {\n  isSignInWithEmailLink,\n  sendSignInLinkToEmail,\n  signInWithEmailLink,\n} from \"firebase/auth\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { auth, logout } from \"../libs/firebase\";\nimport handleError from \"../utils/error\";\n\nconst logOut = () => logout();\n\nconst sendSignIn = (email) => {\n  const actionCodeSettings = {\n    url: window.location.href,\n    handleCodeInApp: true,\n  };\n  return Promise.resolve(\n    sendSignInLinkToEmail(auth, email, actionCodeSettings)\n  );\n};\n\nconst signIn = async () => {\n  if (isSignInWithEmailLink(auth, window.location.href)) {\n    let email = window.localStorage.getItem(\"emailForSignIn\");\n    if (!email) {\n      email = window.prompt(\"Entrez votre email pour confirmation\");\n    }\n\n    await signInWithEmailLink(auth, email, window.location.href)\n      .then(() => {\n        window.localStorage.removeItem(\"emailForSignIn\");\n        window.location.search = \"\";\n      })\n      .catch((error) => {\n        if (error?.code === \"auth/invalid-action-code\") return;\n        handleError(error);\n      });\n  }\n};\n\nconst useRetrieveUser = () => {\n  const [user, loadingUser] = useAuthState(auth);\n  return {user, loadingUser};\n};\n\nexport { sendSignIn, logOut, signIn, useRetrieveUser as retrieveUser };\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormControl from \"@mui/material/FormControl\";\nimport { TextField } from \"@mui/material\";\n\nconst EmailInput = ({ isEmailOnError, setEmailOnError }) => {\n  const [helperText, setHelperText] = useState(\" \");\n\n  const setSuccessEmail = () => {\n    setEmailOnError(false);\n    setHelperText(\" \");\n  };\n\n  const handleBlur = (event) => {\n    const validEmailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n    const email = event.target.value;\n    const isEmptyEmail = email.length === 0;\n    const isValidEmail = validEmailRegex.test(email);\n\n    switch (true) {\n      case isEmptyEmail:\n        setEmailOnError(true);\n        setHelperText(\"Tu n'as pas rempli ton email\");\n        break;\n      case !isValidEmail:\n        setEmailOnError(true);\n        setHelperText(\"Le format de l'email n'est pas bon\");\n        break;\n      default:\n        setSuccessEmail();\n    }\n  };\n\n  const handleChange = (event) => {\n    const validEmailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n    if (isEmailOnError) {\n      if (validEmailRegex.test(event.target.value)) {\n        setSuccessEmail();\n      }\n    }\n  };\n  return (\n    <FormControl>\n      <TextField\n        id=\"email\"\n        type=\"email\"\n        label=\"email\"\n        className=\"emailField\"\n        placeholder=\"Entrez votre email\"\n        required\n        onBlur={handleBlur}\n        onChange={handleChange}\n        error={isEmailOnError}\n        helperText={helperText}\n      />\n    </FormControl>\n  );\n};\n\nEmailInput.propTypes = {\n  isEmailOnError: PropTypes.bool.isRequired,\n  setEmailOnError: PropTypes.func.isRequired,\n};\n\nexport default EmailInput;\n","import React, { useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport handleError from \"../utils/error\";\nimport { sendSignIn } from \"../services/auth\";\nimport EmailInput from \"./EmailInput\";\n\nconst Login = () => {\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\n  const [isEmailOnError, setEmailOnError] = useState(false);\n\n  const login = (email) => {\n    setIsButtonDisabled(true);\n\n    sendSignIn(email)\n      .then(() => {\n        window.localStorage.setItem(\"emailForSignIn\", email);\n        alert(\"Tu vas recevoir un mail pour te connecter 💌\");\n        setIsButtonDisabled(false);\n      })\n      .catch((error) => {\n        handleError(error);\n        setIsButtonDisabled(false);\n      });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const email = event?.target?.elements?.email?.value;\n\n    if (!isEmailOnError) login(email);\n  };\n\n  return (\n    <div className=\"formContainer\">\n      <form onSubmit={handleSubmit}>\n        <EmailInput\n          isEmailOnError={isEmailOnError}\n          setEmailOnError={setEmailOnError}\n        />\n\n        <Button type=\"submit\" variant=\"contained\" disabled={isButtonDisabled}>\n          {!isButtonDisabled\n            ? \"Recevoir le lien de connexion\"\n            : \"Patiente un peu 🚀\"}\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Alert from \"@mui/material/Alert\";\nimport Snackbar from \"@mui/material/Snackbar\";\n\nconst SUCCESS_MESSAGE_LENGTH_DURATION = 3000;\n\nconst SnackbarStack = ({ snackPack, setSnackPack }) => {\n  const [isSnackbarShowed, setSnackbarShowed] = useState(false);\n  const [messageInfo, setMessageInfo] = React.useState(undefined);\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setSnackbarShowed(false);\n  };\n\n  const handleExited = () => {\n    setMessageInfo(undefined);\n  };\n\n  React.useEffect(() => {\n    if (snackPack.length && !messageInfo) {\n      setMessageInfo({ ...snackPack[0] });\n      setSnackPack((prev) => prev.slice(1));\n      setSnackbarShowed(true);\n    } else if (snackPack.length && messageInfo && isSnackbarShowed) {\n      setSnackbarShowed(false);\n    }\n  }, [snackPack, setSnackPack, messageInfo, isSnackbarShowed]);\n\n  return (\n    <Snackbar\n      TransitionProps={{ onExited: handleExited }}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      autoHideDuration={SUCCESS_MESSAGE_LENGTH_DURATION}\n      key={messageInfo?.key ?? undefined}\n      onClose={handleClose}\n      open={isSnackbarShowed}\n    >\n      <Alert severity=\"success\">Repas enregistré</Alert>\n    </Snackbar>\n  );\n};\n\nSnackbarStack.propTypes = {\n  snackPack: PropTypes.arrayOf(\n    PropTypes.shape({\n      message: PropTypes.number,\n      key: PropTypes.string,\n    })\n  ).isRequired,\n  setSnackPack: PropTypes.func.isRequired,\n};\n\nexport default SnackbarStack;\n","import { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useObjectVal } from \"react-firebase-hooks/database\";\nimport { ref, set } from \"firebase/database\";\nimport { auth, database } from \"../libs/firebase\";\n\nconst useRetrieveDiets = () => {\n  const [user] = useAuthState(auth);\n  const userId = user?.uid;\n  const [diets, loadingDiets] = useObjectVal(ref(database, `users/${userId}`));\n\n  return { diets: diets || [], loadingDiets };\n};\n\nconst useSendDiets = (user, data) =>\n  set(ref(database, `users/${user?.uid}`), data);\n\nexport { useRetrieveDiets as retrieveDiets, useSendDiets as sendDiets };\n","const uniqueKey = () => Math.random().toString().slice(2, 9);\n\nexport default uniqueKey;","import { FormControlLabel, Radio, RadioGroup } from \"@mui/material\";\nimport React from \"react\";\nimport * as PropTypes from \"prop-types\";\nimport uniqueKey from \"../utils/uniqueKey\";\n\nconst RadioButtons = ({ data, cssClassName }) => (\n  <div className=\"mb40\">\n    <RadioGroup\n      row\n      aria-label=\"position\"\n      name={data?.[0]?.name}\n      defaultValue={data?.[0]?.value}\n      className=\"radioGroup\"\n    >\n      {data.map((meal) => (\n        <FormControlLabel\n          value={meal?.value}\n          key={uniqueKey()}\n          control={<Radio size=\"small\" />}\n          label={meal?.label}\n          labelPlacement=\"top\"\n          className={cssClassName}\n        />\n      ))}\n    </RadioGroup>\n  </div>\n);\n\nRadioButtons.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string,\n      name: PropTypes.string,\n      value: PropTypes.string,\n    })\n  ).isRequired,\n  cssClassName: PropTypes.string.isRequired,\n};\n\nexport default RadioButtons;\n","import React, { useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport { FormControl, TextField } from \"@mui/material\";\nimport SnackbarStack from \"./SnackbarStack\";\nimport { retrieveDiets, sendDiets } from \"../services/diets\";\nimport { retrieveUser } from \"../services/auth\";\nimport uniqueKey from \"../utils/uniqueKey\";\nimport RadioButtons from \"./RadioButtons\";\nimport mealsData from \"../data/meals.json\";\nimport dietsData from \"../data/diets.json\";\n\nconst DietForm = () => {\n  const [snackPack, setSnackPack] = useState([]);\n  const { user } = retrieveUser();\n  const { diets } = retrieveDiets();\n\n  const composeUserDiet = (date, diet, meal) => {\n    const rawDiets = diets;\n    const dietEntry = { date, diet, meal };\n    const dietFilter = (item) =>\n      dietEntry.date === item.date && dietEntry.meal === item.meal;\n    const currentDietInSavedDiet = rawDiets.filter(dietFilter);\n    const currentDietFirstIndexInSavedDiet = rawDiets.findIndex(dietFilter);\n    const isCurrentDietInSavedDiet = currentDietInSavedDiet.length > 0;\n    if (isCurrentDietInSavedDiet) {\n      rawDiets.splice(\n        currentDietFirstIndexInSavedDiet,\n        currentDietInSavedDiet.length\n      );\n    }\n\n    return [...rawDiets, dietEntry];\n  };\n\n  const handleSuccessMessage = () => {\n    setSnackPack((prev) => [...prev, { key: uniqueKey() }]);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const date = event.target.date.value;\n    const diet = event.target.diet.value;\n    const meal = event.target.meal.value;\n\n    sendDiets(user, composeUserDiet(date, diet, meal)).then(\n      handleSuccessMessage\n    );\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <FormControl component=\"fieldset\" className=\"w100\">\n          <div className=\"dateContainer mb40\">\n            <TextField\n              id=\"date\"\n              label=\"Date du repas\"\n              type=\"date\"\n              className=\"dateField\"\n              InputLabelProps={{ shrink: true }}\n              required\n            />\n          </div>\n\n          <RadioButtons cssClassName=\"mealLabel\" data={mealsData} />\n          <RadioButtons cssClassName=\"label\" data={dietsData} />\n        </FormControl>\n\n        <Button type=\"submit\" variant=\"contained\">\n          Enregistrer\n        </Button>\n      </form>\n\n      <SnackbarStack snackPack={snackPack} setSnackPack={setSnackPack} />\n    </>\n  );\n};\n\nexport default DietForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { PieChart } from \"react-minimal-pie-chart\";\n\nconst Chart = ({ diets, data, label }) => (\n  <div className=\"chartContainer\">\n    {diets.length === 0 ? (\n      <div className=\"chartEmpty\">\n        <p>Remplis le formulaire 😉</p>\n      </div>\n    ) : (\n      <PieChart data={data} label={label} labelStyle={{ fontSize: \"6px\" }} />\n    )}\n  </div>\n);\n\nChart.propTypes = {\n  diets: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      value: PropTypes.number,\n      color: PropTypes.string,\n    })\n  ).isRequired,\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      date: PropTypes.string,\n      diet: PropTypes.string,\n      meal: PropTypes.string,\n    })\n  ).isRequired,\n  label: PropTypes.func.isRequired,\n};\n\nexport default Chart;\n","import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport DietForm from \"./DietForm\";\nimport Chart from \"./Chart\";\nimport { logOut, retrieveUser } from \"../services/auth\";\nimport { retrieveDiets } from \"../services/diets\";\n\nconst MyQS = () => {\n  const { user } = retrieveUser();\n  const { diets } = retrieveDiets();\n\n  const getDietNumber = () => {\n    const dietDates = diets.reduce((previousValue, currentValue) => {\n      previousValue.push(currentValue.date);\n      return previousValue;\n    }, []);\n\n    const dietDatesWithoutDuplicateDates = dietDates.filter(\n      (item, index) => dietDates.indexOf(item) === index\n    );\n\n    return dietDatesWithoutDuplicateDates.length;\n  };\n\n  const getData = () => {\n    const savedDiet = diets;\n    const veganDiet = savedDiet.filter((diet) => diet.diet === \"vegan\");\n    const vegetarianDiet = savedDiet.filter(\n      (diet) => diet.diet === \"vegetarian\"\n    );\n    const omnivoreDiet = savedDiet.filter((diet) => diet.diet === \"omnivore\");\n\n    return [\n      { title: \"vegan\", value: veganDiet.length, color: \"#75DBCD\" },\n      { title: \"végétarien\", value: vegetarianDiet.length, color: \"#FAA381\" },\n      { title: \"omnivore\", value: omnivoreDiet.length, color: \"#DCDBA8\" },\n    ];\n  };\n\n  const getDatesFromSavedDiet = () =>\n    diets.reduce((previousValue, currentValue) => {\n      previousValue.push(currentValue.date);\n      return previousValue;\n    }, []);\n\n  const getNearestDate = () => {\n    const today = new Date();\n    const dates = getDatesFromSavedDiet();\n    const sortedByDiff = [...dates].sort(\n      (a, b) => Math.abs(new Date(a) - today) - Math.abs(new Date(b) - today)\n    );\n\n    return sortedByDiff[0];\n  };\n\n  const nearestDate = getNearestDate()\n    ? new Date(getNearestDate()).toLocaleDateString(\"fr\")\n    : \"Aucune 🤷‍\";\n\n  return (\n    <>\n      <Chart\n        diets={diets}\n        data={getData()}\n        label={({ dataEntry }) =>\n          dataEntry.value > 0\n            ? `${dataEntry.title} : ${Math.round(dataEntry.percentage)}%`\n            : null\n        }\n      />\n\n      <DietForm />\n\n      <div>\n        <p>Nombre de jours : {getDietNumber()}</p>\n        <p>Date la plus proche renseignée : {nearestDate}</p>\n      </div>\n\n      <hr />\n      {user && (\n        <div>\n          <p>Utilisateur: {user.email}</p>\n          <Button\n            onClick={logOut}\n            className=\"logOut\"\n            type=\"submit\"\n            variant=\"outlined\"\n          >\n            Se déconnecter\n          </Button>\n        </div>\n      )}\n\n      <hr />\n    </>\n  );\n};\n\nMyQS.propTypes = {};\n\nexport default MyQS;\n","import React from \"react\";\nimport { Box, AppBar, Toolbar, Typography } from \"@mui/material\";\n\nconst Header = () => (\n  <Box>\n    <AppBar position=\"fixed\">\n      <Toolbar>\n        <Typography variant=\"h6\" component=\"div\" className=\"appBarText\">\n          {process.env.REACT_APP_WEBSITE_NAME}\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  </Box>\n);\n\nexport default Header;\n","import \"../css/loader.css\";\nimport React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Header from \"./Header\";\n\nconst Loading = () => (\n  <div className=\"App\">\n    <Header />\n    <div className=\"loadingContainer\">\n      <div className=\"loading\">\n        <Box component=\"p\">Patiente pendant que la magie opère ✨</Box>\n        <span />\n        <span />\n        <span />\n        <span />\n        <span />\n        <span />\n        <span />\n      </div>\n    </div>\n  </div>\n);\n\nexport default Loading;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Loading from \"../components/Loading\";\nimport { retrieveDiets } from \"../services/diets\";\nimport { retrieveUser } from \"../services/auth\";\n\nconst GlobalLoader = ({ children }) => {\n  const [isLoading, setLoading] = useState(true);\n  const { loadingDiets } = retrieveDiets();\n  const { loadingUser } = retrieveUser();\n  const shouldShowLoader = loadingUser || loadingDiets;\n\n  useEffect(() => {\n    if (shouldShowLoader) {\n      setTimeout(() => setLoading(true), 500);\n    } else {\n      setTimeout(() => setLoading(false), 500);\n    }\n  }, [setLoading, shouldShowLoader]);\n\n  return isLoading ? <Loading /> : children;\n};\n\nGlobalLoader.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.element).isRequired,\n};\n\nexport default GlobalLoader;\n","import React from \"react\";\nimport { Typography } from \"@mui/material\";\n\nconst Footer = () => (\n  <footer>\n        <Typography>Fait avec ❤️ par yasakura_</Typography>\n  </footer>\n);\n\nexport default Footer;\n","// import logo from './logo.svg';\nimport \"./css/App.css\";\nimport React, { useEffect } from \"react\";\nimport { createTheme, ThemeProvider } from \"@mui/material\";\nimport Login from \"./components/Login\";\nimport MyQS from \"./components/MyQS\";\nimport Header from \"./components/Header\";\nimport { retrieveUser, signIn } from \"./services/auth\";\nimport GlobalLoader from \"./hoc/GlobalLoader\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  const { user } = retrieveUser();\n\n  const theme = createTheme({\n    palette: {\n      primary: {\n        main: \"#007ea7\",\n      },\n    },\n  });\n\n  useEffect(() => signIn());\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalLoader>\n        <Header />\n        <div className=\"App\">{user ? <MyQS /> : <Login />}</div>\n        {user && <Footer />}\n      </GlobalLoader>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}